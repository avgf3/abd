<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="ملف شخصي احترافي - Dynamo Arabic Chat">
  <title>ملف شخصي احترافي</title>
  <!-- Pickr CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/themes/classic.min.css" />
  <style>
    :root {
      --main-bg: #121212;
      --card-bg: linear-gradient(135deg, #f57f17, #b71c1c, #6a1b9a);
      --text-color: #ffffff;
      --accent-color: #ffc107;
      --error-color: #f44336;
      --success-color: #4caf50;
    }

    /* أنماط الألوان العصرية مع التدريج المائي */
    .theme-sunset-glow {
      --card-bg: linear-gradient(135deg, 
        #2c1810, 
        #8b0000, 
        #dc143c, 
        #ff6347, 
        #ff8c00
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fff3e0;
    }

    .theme-ocean-depths {
      --card-bg: linear-gradient(135deg, 
        rgba(102, 126, 234, 0.9), 
        rgba(118, 75, 162, 0.85), 
        rgba(171, 147, 251, 0.8), 
        rgba(102, 126, 234, 0.9)
      ),
      radial-gradient(circle at 20% 30%, rgba(255, 255, 255, 0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0, 150, 255, 0.25) 0%, transparent 60%);
      --accent-color: #e3f2fd;
    }

    .theme-aurora-borealis {
      --card-bg: linear-gradient(135deg, 
        #0a0a0a, 
        #1a1a2e, 
        #16213e, 
        #0f3460, 
        #533483
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f0f8ff;
    }

    .theme-cosmic-night {
      --card-bg: linear-gradient(135deg, 
        #000000, 
        #1a0033, 
        #330066, 
        #6600cc, 
        #9933ff
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #e8eaf6;
    }

    .theme-emerald-forest {
      --card-bg: linear-gradient(135deg, 
        #0a1a0a, 
        #1a3a1a, 
        #2d5a2d, 
        #4a7c4a, 
        #6b9e6b
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #e8f5e8;
    }

    .theme-rose-gold {
      --card-bg: linear-gradient(135deg, 
        #2d1b1b, 
        #4a2c2c, 
        #8b4513, 
        #daa520, 
        #ffd700
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fff0f3;
    }

    .theme-midnight-purple {
      --card-bg: linear-gradient(135deg, 
        #000033, 
        #1a1a4a, 
        #333366, 
        #4d4d99, 
        #6666cc
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f3e5f5;
    }

    .theme-golden-hour {
      --card-bg: linear-gradient(135deg, 
        #1a0f0f, 
        #4a2c1a, 
        #8b4513, 
        #daa520, 
        #ffd700
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fff8e1;
    }

    .theme-neon-dreams {
      --card-bg: linear-gradient(135deg, 
        #0a0a0a, 
        #2d1b2d, 
        #4a1a4a, 
        #8b008b, 
        #ff00ff
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fce4ec;
    }

    .theme-silver-mist {
      --card-bg: linear-gradient(135deg, 
        #1a1a1a, 
        #2d2d2d, 
        #4a4a4a, 
        #666666, 
        #808080
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fafafa;
    }

    .theme-fire-opal {
      --card-bg: linear-gradient(135deg, 
        #1a0a0a, 
        #4a1a1a, 
        #8b0000, 
        #dc143c, 
        #ff4500
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fff3e0;
    }

    .theme-crystal-clear {
      --card-bg: linear-gradient(135deg, 
        #0a1a2a, 
        #1a2a4a, 
        #2a4a6a, 
        #4a6a8a, 
        #6a8aaa
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #e1f5fe;
    }

    /* الألوان المخملية الجديدة */
    .theme-burgundy-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a0a, 
        #2d1b1b, 
        #4a1a1a, 
        #8b0000, 
        #a52a2a
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #ffe4e1;
    }

    .theme-golden-velvet {
      --card-bg: linear-gradient(135deg, 
        #1a1a0a, 
        #2d2d1a, 
        #4a4a1a, 
        #8b8b00, 
        #ffd700
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #fff8dc;
    }

    .theme-royal-black {
      --card-bg: linear-gradient(135deg, 
        #000000, 
        #1a1a2e, 
        #2d2d4a, 
        #4a4a6a, 
        #66668a
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f0f8ff;
    }

    .theme-berry-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a1a, 
        #1a1a2d, 
        #2d2d4a, 
        #4a4a6a, 
        #8a2be2
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f8f0ff;
    }

    .theme-crimson-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a0a, 
        #2d1b1b, 
        #4a1a1a, 
        #8b0000, 
        #dc143c
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #ffe4e1;
    }

    .theme-emerald-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a1a0a, 
        #1a2d1a, 
        #2d4a2d, 
        #4a6a4a, 
        #6b8a6b
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f0fff0;
    }

    .theme-sapphire-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a1a, 
        #1a1a2d, 
        #2d2d4a, 
        #4a4a6a, 
        #6b6b8a
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f0f8ff;
    }

    .theme-ruby-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a0a, 
        #2d1b1b, 
        #4a1a1a, 
        #8b0000, 
        #9b111e
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #ffe4e1;
    }

    .theme-amethyst-velvet {
      --card-bg: linear-gradient(135deg, 
        #0a0a1a, 
        #1a1a2d, 
        #2d2d4a, 
        #4a4a6a, 
        #9966cc
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f8f0ff;
    }

    .theme-onyx-velvet {
      --card-bg: linear-gradient(135deg, 
        #000000, 
        #1a1a1a, 
        #2d2d2d, 
        #4a4a4a, 
        #666666
      ),
      radial-gradient(circle at 20% 30%, rgba(255,255,255,0.15) 0%, transparent 60%),
      radial-gradient(circle at 80% 70%, rgba(0,150,255,0.25) 0%, transparent 60%);
      --accent-color: #f5f5f5;
    }

    /* التدرج الجذاب الجديد - محدث */
    .theme-sunset-fire {
      --card-bg: linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%);
      --accent-color: #fff3e0;
    }

    /* التدرج المثالي الجديد - محدث */
    .theme-perfect-gradient {
      --card-bg: linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%);
      --accent-color: #fff3e0;
    }

    /* التدرج من الصورة - محدث */
    .theme-image-gradient {
      --card-bg: linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%);
      --accent-color: #fff3e0;
    }

    /* التدرج الجديد المطابق للصورة - محدث */
    .theme-new-gradient {
      --card-bg: linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%);
      --accent-color: #fff3e0;
    }

    * {
      box-sizing: border-box;
    }

    body {
      background: var(--main-bg);
      color: var(--text-color);
      font-family: 'Segoe UI', 'Arial', sans-serif;
      margin: 0;
      padding: 20px;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
      line-height: 1.6;
    }

    .profile-card {
      width: 100%;
      max-width: 380px;
      border-radius: 16px;
      overflow: hidden;
      background: var(--card-bg);
      box-shadow: 0 8px 32px rgba(0,0,0,0.8);
      position: relative;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      height: fit-content;
    }



    .profile-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 12px 40px rgba(0,0,0,0.9);
    }

    .profile-cover {
      position: relative;
      aspect-ratio: 3 / 1;
      background-image: url('https://i.imgur.com/rJKrUfs.jpeg');
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
    }

    .change-cover-btn {
      position: absolute;
      top: 12px;
      left: 12px;
      background: rgba(0,0,0,0.7);
      border-radius: 8px;
      padding: 8px 12px;
      color: #fff;
      font-size: 12px;
      cursor: pointer;
      z-index: 3;
      transition: background 0.3s ease;
      border: none;
      font-weight: 500;
    }

    .change-cover-btn:hover {
      background: rgba(0,0,0,0.9);
    }

    .profile-avatar {
      width: 100px;
      height: 100px;
      border-radius: 16px;
      overflow: hidden;
      border: 4px solid rgba(255,255,255,0.9);
      position: absolute;
      top: calc(100% - 50px);
      right: 20px;
      background-color: white;
      box-shadow: 0 6px 20px rgba(0,0,0,0.6);
      z-index: 2;
      transition: transform 0.3s ease;
    }

    .profile-avatar:hover {
      transform: scale(1.05);
    }

    .profile-avatar img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      display: block;
    }

    .change-avatar-btn {
      position: absolute;
      top: calc(100% - 25px);
      right: 28px;
      background: rgba(0,0,0,0.8);
      border-radius: 50%;
      width: 30px;
      height: 30px;
      text-align: center;
      line-height: 30px;
      font-size: 14px;
      color: #fff;
      cursor: pointer;
      z-index: 3;
      transition: background 0.3s ease, transform 0.2s ease;
      border: none;
    }

    .change-avatar-btn:hover {
      background: rgba(0,0,0,1);
      transform: scale(1.1);
    }

    input[type="file"] {
      display: none;
    }

    .profile-body {
      padding: 60px 20px 16px;
    }

    .profile-info {
      margin-bottom: 12px;
      text-align: center;
      margin-top: -50px;
    }

    .profile-info h3 {
      margin: 0 0 6px 0;
      font-size: 20px;
      font-weight: bold;
      color: var(--accent-color);
      text-shadow: 0 2px 4px rgba(0,0,0,0.5);
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .profile-info h3:hover {
      color: #fff;
      transform: translateY(-2px);
    }

    .profile-info small {
      display: block;
      font-size: 13px;
      color: #ddd;
      opacity: 0.9;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    .profile-info small:hover {
      color: var(--accent-color);
      transform: translateY(-1px);
    }

    .profile-buttons {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 12px 0;
      justify-content: center;
    }

    .profile-buttons button {
      flex: 1 1 30%;
      background: linear-gradient(135deg, #b71c1c, #8e0000);
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 8px;
      font-weight: bold;
      cursor: pointer;
      font-size: 12px;
      transition: all 0.3s ease;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      border: 1px solid rgba(255,255,255,0.1);
      backdrop-filter: blur(10px);
    }

    .profile-buttons button:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(0,0,0,0.4);
      background: linear-gradient(135deg, #d32f2f, #b71c1c);
      border-color: rgba(255,255,255,0.2);
    }

    .profile-buttons button:active {
      transform: translateY(0);
    }

    .profile-details {
      padding: 12px;
      font-size: 13px;
      background: rgba(255,255,255,0.08);
      border-radius: 12px;
      margin: 12px 0;
      border: 1px solid rgba(255,255,255,0.1);
      backdrop-filter: blur(10px);
    }

    .profile-details p {
      margin: 6px 0;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 6px 8px;
      border-radius: 6px;
      transition: all 0.3s ease;
      border-bottom: 1px solid rgba(255,255,255,0.08);
      cursor: pointer;
    }
    
    .profile-details p:hover {
      background: rgba(255,255,255,0.05);
      transform: translateX(-3px);
    }

    .profile-details p:last-child {
      border-bottom: none;
    }

    .profile-details span {
      font-weight: bold;
      color: var(--accent-color);
      text-align: left;
      text-shadow: 0 1px 2px rgba(0,0,0,0.3);
      padding: 3px 6px;
      border-radius: 4px;
      background: rgba(255,255,255,0.05);
    }

    .additional-details {
      background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05));
      padding: 10px 16px;
      border-radius: 12px;
      margin: 10px 0;
      border: 1px solid rgba(255,255,255,0.15);
      backdrop-filter: blur(15px);
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    }

    .additional-details p {
      margin: 6px 0;
      font-size: 12px;
      color: #eee;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 4px 8px;
      border-radius: 6px;
      transition: all 0.3s ease;
    }
    
    .additional-details p:hover {
      background: rgba(255,255,255,0.08);
      transform: scale(1.02);
    }

    .additional-details span {
      font-weight: bold;
      color: var(--accent-color);
      text-shadow: 0 1px 2px rgba(0,0,0,0.3);
      padding: 2px 6px;
      border-radius: 4px;
      background: rgba(255,255,255,0.08);
      border: 1px solid rgba(255,255,255,0.1);
    }

    .loading {
      opacity: 0.6;
      pointer-events: none;
    }

    .error-message {
      background: var(--error-color);
      color: white;
      padding: 6px 10px;
      border-radius: 6px;
      margin: 6px 0;
      font-size: 11px;
      text-align: center;
    }

    .success-message {
      background: var(--success-color);
      color: white;
      padding: 6px 10px;
      border-radius: 6px;
      margin: 6px 0;
      font-size: 11px;
      text-align: center;
    }
    
    /* نافذة تعديل البيانات */
    .edit-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0,0,0,0.8);
      display: none;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }
    .edit-modal.show {
      display: flex;
    }
    .edit-content {
      background: var(--card-bg);
      padding: 24px;
      border-radius: 16px;
      width: 90%;
      max-width: 350px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.9);
    }
    .edit-content h3 {
      margin: 0 0 16px 0;
      color: var(--accent-color);
      text-align: center;
      font-size: 18px;
    }
    .edit-field {
      margin-bottom: 16px;
    }
    .edit-field label {
      display: block;
      margin-bottom: 6px;
      color: #fff;
      font-weight: bold;
      font-size: 14px;
    }
    .edit-field input, .edit-field select, .edit-field textarea {
      width: 100%;
      padding: 12px;
      border: 2px solid rgba(255,255,255,0.3);
      border-radius: 10px;
      background: linear-gradient(135deg, rgba(255,255,255,0.15), rgba(255,255,255,0.05));
      color: #fff;
      font-size: 14px;
      font-weight: 500;
      backdrop-filter: blur(10px);
      transition: all 0.3s ease;
    }
    .edit-field input:focus, .edit-field select:focus, .edit-field textarea:focus {
      outline: none;
      border-color: var(--accent-color);
      background: linear-gradient(135deg, rgba(255,255,255,0.2), rgba(255,255,255,0.1));
      box-shadow: 0 0 15px rgba(255,193,7,0.3);
    }
    
    /* تحسين مظهر القوائم المنسدلة */
    .edit-field select {
      cursor: pointer;
      appearance: none;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23ffc107' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
      background-repeat: no-repeat;
      background-position: right 12px center;
      background-size: 16px;
      padding-right: 40px;
    }
    
    .edit-field select option {
      background: linear-gradient(135deg, #1a1a1a, #2a2a2a);
      color: #fff;
      padding: 12px;
      font-size: 14px;
      font-weight: 500;
      border: none;
      border-radius: 8px;
      margin: 2px 0;
      transition: all 0.3s ease;
    }

    /* أنماط خيارات الألوان */
    .theme-option {
      display: flex;
      align-items: center;
      gap: 10px;
      padding: 8px 12px;
      border-radius: 8px;
      margin: 4px 0;
      cursor: pointer;
      transition: all 0.3s ease;
      background: rgba(255,255,255,0.05);
      border: 1px solid rgba(255,255,255,0.1);
    }

    .theme-option:hover {
      background: rgba(255,255,255,0.1);
      transform: translateX(-5px);
    }

    .theme-option.selected {
      background: var(--accent-color);
      color: #000;
      font-weight: bold;
      transform: scale(1.05);
      box-shadow: 0 4px 15px rgba(255,193,7,0.4);
    }

    .theme-option.selected .theme-preview {
      transform: scale(1.1);
    }

    .theme-preview {
      width: 24px;
      height: 24px;
      border-radius: 50%;
      border: 2px solid rgba(255,255,255,0.3);
      flex-shrink: 0;
      box-shadow: 0 2px 8px rgba(0,0,0,0.3);
      transition: all 0.3s ease;
    }

    .theme-option:hover .theme-preview {
      transform: scale(1.2);
      border-color: rgba(255,255,255,0.8);
      box-shadow: 0 4px 12px rgba(0,0,0,0.4);
    }



    .theme-name {
      flex: 1;
      font-size: 14px;
      font-weight: 500;
    }

    /* ===== تأثيرات حركية جميلة ===== */
    
    /* تأثير النبض الناعم */
    .effect-pulse {
      animation: gentlePulse 3s ease-in-out infinite;
    }
    
    @keyframes gentlePulse {
      0%, 100% { transform: scale(1); }
      50% { transform: scale(1.02); }
    }
    
    /* تأثير التوهج الذهبي */
    .effect-glow {
      animation: goldenGlow 4s ease-in-out infinite;
      box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,215,0,0.3);
    }
    
    @keyframes goldenGlow {
      0%, 100% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,215,0,0.3);
      }
      50% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 30px rgba(255,215,0,0.6);
      }
    }
    
    /* تأثير التموج المائي */
    .effect-water {
      animation: waterWave 6s ease-in-out infinite;
      background-size: 400% 400% !important;
    }
    
    @keyframes waterWave {
      0%, 100% { background-position: 0% 50%; }
      25% { background-position: 100% 50%; }
      50% { background-position: 100% 100%; }
      75% { background-position: 0% 100%; }
    }
    
    /* تأثير الشفق القطبي */
    .effect-aurora {
      animation: auroraShift 8s ease-in-out infinite;
      background-size: 300% 300% !important;
    }
    
    @keyframes auroraShift {
      0%, 100% { 
        background-position: 0% 50%;
        filter: hue-rotate(0deg);
      }
      25% { 
        background-position: 100% 50%;
        filter: hue-rotate(90deg);
      }
      50% { 
        background-position: 100% 100%;
        filter: hue-rotate(180deg);
      }
      75% { 
        background-position: 0% 100%;
        filter: hue-rotate(270deg);
      }
    }
    
    /* تأثير النيون المتوهج */
    .effect-neon {
      animation: neonFlicker 2s ease-in-out infinite;
      box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,20,147,0.5);
    }
    
    @keyframes neonFlicker {
      0%, 100% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,20,147,0.5);
      }
      50% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 30px rgba(255,20,147,0.8);
      }
    }
    
    /* تأثير البلور المتلألئ */
    .effect-crystal {
      animation: crystalShimmer 5s ease-in-out infinite;
      position: relative;
    }
    
    .effect-crystal::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
      animation: crystalSweep 3s ease-in-out infinite;
    }
    
    @keyframes crystalShimmer {
      0%, 100% { filter: brightness(1) contrast(1); }
      50% { filter: brightness(1.1) contrast(1.1); }
    }
    
    @keyframes crystalSweep {
      0% { left: -100%; }
      100% { left: 100%; }
    }
    
    /* تأثير النار المتوهجة */
    .effect-fire {
      animation: fireFlicker 1.5s ease-in-out infinite;
      box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,69,0,0.5);
    }
    
    @keyframes fireFlicker {
      0%, 100% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 20px rgba(255,69,0,0.5);
        filter: brightness(1);
      }
      50% { 
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 30px rgba(255,69,0,0.8);
        filter: brightness(1.1);
      }
    }
    
    /* تأثير المغناطيس */
    .effect-magnetic {
      animation: magneticFloat 4s ease-in-out infinite;
    }
    
    @keyframes magneticFloat {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-8px); }
    }
    
    /* تأثير القلب النابض */
    .effect-heartbeat {
      animation: heartbeat 2s ease-in-out infinite;
    }
    
    @keyframes heartbeat {
      0%, 100% { transform: scale(1); }
      14% { transform: scale(1.03); }
      28% { transform: scale(1); }
      42% { transform: scale(1.03); }
      70% { transform: scale(1); }
    }
    
    /* تأثير النجوم المتلألئة */
    .effect-stars {
      position: relative;
      animation: starTwinkle 3s ease-in-out infinite;
    }
    
    .effect-stars::before {
      content: '✨';
      position: absolute;
      top: 10px;
      right: 10px;
      font-size: 20px;
      animation: starFloat 4s ease-in-out infinite;
    }
    
    .effect-stars::after {
      content: '⭐';
      position: absolute;
      bottom: 10px;
      left: 10px;
      font-size: 16px;
      animation: starFloat 4s ease-in-out infinite reverse;
    }
    
    @keyframes starTwinkle {
      0%, 100% { filter: brightness(1); }
      50% { filter: brightness(1.2); }
    }
    
    @keyframes starFloat {
      0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.7; }
      50% { transform: translateY(-10px) rotate(180deg); opacity: 1; }
    }
    
    /* تأثير القوس قزح */
    .effect-rainbow {
      animation: rainbowShift 6s ease-in-out infinite;
      background-size: 400% 400% !important;
    }
    
    @keyframes rainbowShift {
      0%, 100% { 
        background-position: 0% 50%;
        filter: hue-rotate(0deg);
      }
      25% { 
        background-position: 100% 50%;
        filter: hue-rotate(60deg);
      }
      50% { 
        background-position: 100% 100%;
        filter: hue-rotate(120deg);
      }
      75% { 
        background-position: 0% 100%;
        filter: hue-rotate(180deg);
      }
    }
    
    /* تأثير الثلج المتساقط */
    .effect-snow {
      position: relative;
      animation: snowFall 4s ease-in-out infinite;
    }
    
    .effect-snow::before {
      content: '❄️';
      position: absolute;
      top: 5px;
      right: 20px;
      font-size: 14px;
      animation: snowFloat 3s ease-in-out infinite;
    }
    
    .effect-snow::after {
      content: '❄️';
      position: absolute;
      top: 15px;
      left: 30px;
      font-size: 12px;
      animation: snowFloat 3s ease-in-out infinite 1s;
    }
    
    @keyframes snowFall {
      0%, 100% { filter: brightness(1); }
      50% { filter: brightness(1.1); }
    }
    
    @keyframes snowFloat {
      0% { transform: translateY(-10px) rotate(0deg); opacity: 0; }
      50% { transform: translateY(20px) rotate(180deg); opacity: 1; }
      100% { transform: translateY(50px) rotate(360deg); opacity: 0; }
    }
    
    /* تأثير البرق */
    .effect-lightning {
      animation: lightningFlash 4s ease-in-out infinite;
    }
    
    @keyframes lightningFlash {
      0%, 90%, 100% { 
        filter: brightness(1);
        box-shadow: 0 8px 32px rgba(0,0,0,0.8);
      }
      5%, 15% { 
        filter: brightness(1.3);
        box-shadow: 0 8px 32px rgba(0,0,0,0.8), 0 0 30px rgba(255,255,255,0.8);
      }
    }
    
    /* تأثير الدخان */
    .effect-smoke {
      position: relative;
      animation: smokeRise 5s ease-in-out infinite;
    }
    
    .effect-smoke::before {
      content: '💨';
      position: absolute;
      bottom: 5px;
      right: 15px;
      font-size: 16px;
      animation: smokeFloat 4s ease-in-out infinite;
    }
    
    @keyframes smokeRise {
      0%, 100% { filter: brightness(1); }
      50% { filter: brightness(1.05); }
    }
    
    @keyframes smokeFloat {
      0% { transform: translateY(0px) scale(1); opacity: 0.8; }
      100% { transform: translateY(-30px) scale(1.5); opacity: 0; }
    }
    
    /* تأثير الفراشة */
    .effect-butterfly {
      position: relative;
      animation: butterflyFlutter 3s ease-in-out infinite;
    }
    
    .effect-butterfly::before {
      content: '🦋';
      position: absolute;
      top: 10px;
      left: 10px;
      font-size: 18px;
      animation: butterflyFloat 4s ease-in-out infinite;
    }
    
    @keyframes butterflyFlutter {
      0%, 100% { filter: brightness(1); }
      50% { filter: brightness(1.1); }
    }
    
    @keyframes butterflyFloat {
      0%, 100% { transform: translateX(0px) translateY(0px) rotate(0deg); }
      25% { transform: translateX(10px) translateY(-5px) rotate(10deg); }
      50% { transform: translateX(0px) translateY(-10px) rotate(0deg); }
      75% { transform: translateX(-10px) translateY(-5px) rotate(-10deg); }
    }
    
    .edit-field select option:hover {
      background: linear-gradient(135deg, var(--accent-color), #ff9800);
      color: #000;
      transform: scale(1.02);
    }
    
    .edit-field select option:checked {
      background: linear-gradient(135deg, var(--accent-color), #ff9800);
      color: #000;
      font-weight: bold;
    }
    .edit-buttons {
      display: flex;
      gap: 10px;
      justify-content: center;
    }
    .edit-buttons button {
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s;
      font-size: 13px;
    }
    .save-btn {
      background: var(--success-color);
      color: white;
    }
    .cancel-btn {
      background: var(--error-color);
      color: white;
    }
    .edit-buttons button:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    }

    @media (max-width: 480px) {
      body {
        padding: 10px;
      }
      
      .profile-card {
        max-width: 100%;
      }
      
      .profile-avatar {
        width: 80px;
        height: 80px;
        top: calc(100% - 40px);
        right: 16px;
      }
      
      .change-avatar-btn {
        top: calc(100% - 20px);
        right: 22px;
        width: 25px;
        height: 25px;
        line-height: 25px;
        font-size: 12px;
      }
      
      .profile-body {
        padding: 50px 12px 12px;
      }
      
      .profile-info h3 {
        font-size: 18px;
      }
    }
  </style>
</head>
<body>

  <div class="profile-card theme-new-gradient">
    <div class="profile-cover" id="profileCover">
      <button class="change-cover-btn" onclick="document.getElementById('coverInput').click()">
        🖼️ تغيير الغلاف
      </button>
      <input type="file" id="coverInput" accept="image/*" onchange="handleCoverChange(event)">

      <div class="profile-avatar" id="avatarBox">
        <img id="avatarImage" src="https://i.imgur.com/6BvQSMt.jpg" alt="الصورة الشخصية" />
        <button class="change-avatar-btn" onclick="document.getElementById('avatarInput').click()" title="تغيير الصورة">
          📷
        </button>
        <input type="file" id="avatarInput" accept="image/*" onchange="handleAvatarChange(event)" />
      </div>
    </div>

    <div class="profile-body">
      <div class="profile-info">
        <h3 id="userName" onclick="openEditModal('name')">$ilda✯NightMare↝~</h3>
        <small id="userStatus" onclick="openEditModal('status')">👌😔 Dynamo Arabic chat#</small>
      </div>

      <div class="profile-buttons">
        <button onclick="handleReport()" class="action-btn">🚩 تبليغ</button>
        <button onclick="handleBlock()" class="action-btn">🚫 حظر</button>
        <button onclick="handleChat()" class="chat-btn">💬 محادثة</button>
      </div>

      <div class="profile-details">
        <p onclick="openEditModal('gender')">🧍‍♀️ الجنس: <span id="userGender">أنثى</span></p>
        <p onclick="openEditModal('country')">🌍 البلد: <span id="userCountry">🇸🇦 السعودية</span></p>
        <p onclick="openEditModal('age')">🎂 العمر: <span id="userAge">24 سنة</span></p>
        <p onclick="openEditModal('socialStatus')">💍 الحالة الاجتماعية: <span id="userSocialStatus">أعزب</span></p>
        <p>📅 تاريخ الإنضمام: <span>2021-10-04</span></p>
        <p>🎁 نقاط الهدايا: <span>340</span></p>
        <p>🧾 الحالة: <span>متاحة</span></p>
      </div>

      <div class="additional-details">
        <p>💬 عدد الرسائل: <span>1523</span></p>
        <p>⭐ مستوى العضو: <span>الرتبة 12</span></p>
        <p onclick="openEditModal('theme')">🎨 لون الملف الشخصي: <span id="userTheme">التدرج الجديد المطابق للصورة</span></p>
        <p onclick="openEditModal('effects')">✨ تأثيرات حركية: <span id="userEffects">بدون تأثيرات</span></p>
      </div>
    </div>
  </div>

  <!-- نافذة تعديل البيانات -->
  <div class="edit-modal" id="editModal">
    <div class="edit-content">
      <h3 id="editTitle">تعديل البيانات</h3>
      <div class="edit-field">
        <label id="editLabel">القيمة الجديدة:</label>
        <input type="text" id="editInput" placeholder="أدخل القيمة الجديدة">
        <select id="editSelect" style="display: none;">
          <option value="">اختر...</option>
        </select>
      </div>
      <div class="edit-buttons">
        <button class="save-btn" onclick="saveEdit()">💾 حفظ</button>
        <button class="cancel-btn" onclick="closeEditModal()">❌ إلغاء</button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/@simonwep/pickr/dist/pickr.min.js"></script>
  <script>
    // تحسين الأداء والأمان
    class ProfileManager {
      constructor() {
        this.avatarInput = document.getElementById('avatarInput');
        this.avatarImage = document.getElementById('avatarImage');
        this.coverInput = document.getElementById('coverInput');
        this.profileCover = document.getElementById('profileCover');
        this.maxFileSize = 5 * 1024 * 1024; // 5MB
        this.allowedTypes = ['image/jpeg', 'image/png', 'image/webp'];
        this.currentEditType = null;
        this.isOwnProfile = true; // true = ملفي الشخصي، false = ملف شخص آخر
        
        // قوائم الخيارات مع الأعلام
        this.genders = [
          { value: 'ذكر', emoji: '👨', label: 'ذكر' },
          { value: 'أنثى', emoji: '👩', label: 'أنثى' }
        ];
        
        this.countries = [
          { value: '🇸🇦 السعودية', emoji: '🇸🇦', label: 'السعودية' },
          { value: '🇦🇪 الإمارات', emoji: '🇦🇪', label: 'الإمارات' },
          { value: '🇶🇦 قطر', emoji: '🇶🇦', label: 'قطر' },
          { value: '🇰🇼 الكويت', emoji: '🇰🇼', label: 'الكويت' },
          { value: '🇧🇭 البحرين', emoji: '🇧🇭', label: 'البحرين' },
          { value: '🇴🇲 عمان', emoji: '🇴🇲', label: 'عمان' },
          { value: '🇾🇪 اليمن', emoji: '🇾🇪', label: 'اليمن' },
          { value: '🇪🇬 مصر', emoji: '🇪🇬', label: 'مصر' },
          { value: '🇸🇩 السودان', emoji: '🇸🇩', label: 'السودان' },
          { value: '🇱🇾 ليبيا', emoji: '🇱🇾', label: 'ليبيا' },
          { value: '🇹🇳 تونس', emoji: '🇹🇳', label: 'تونس' },
          { value: '🇩🇿 الجزائر', emoji: '🇩🇿', label: 'الجزائر' },
          { value: '🇲🇦 المغرب', emoji: '🇲🇦', label: 'المغرب' },
          { value: '🇱🇧 لبنان', emoji: '🇱🇧', label: 'لبنان' },
          { value: '🇸🇾 سوريا', emoji: '🇸🇾', label: 'سوريا' },
          { value: '🇯🇴 الأردن', emoji: '🇯🇴', label: 'الأردن' },
          { value: '🇵🇸 فلسطين', emoji: '🇵🇸', label: 'فلسطين' },
          { value: '🇮🇶 العراق', emoji: '🇮🇶', label: 'العراق' },
          { value: '🇹🇷 تركيا', emoji: '🇹🇷', label: 'تركيا' },
          { value: '🇮🇷 إيران', emoji: '🇮🇷', label: 'إيران' },
          { value: '🇸🇴 الصومال', emoji: '🇸🇴', label: 'الصومال' },
          { value: '🇩🇯 جيبوتي', emoji: '🇩🇯', label: 'جيبوتي' },
          { value: '🇰🇲 جزر القمر', emoji: '🇰🇲', label: 'جزر القمر' },
          { value: '🇲🇷 موريتانيا', emoji: '🇲🇷', label: 'موريتانيا' },
          { value: '🇹🇩 تشاد', emoji: '🇹🇩', label: 'تشاد' },
          { value: '🇳🇪 النيجر', emoji: '🇳🇪', label: 'النيجر' },
          { value: '🇲🇱 مالي', emoji: '🇲🇱', label: 'مالي' },
          { value: '🇧🇫 بوركينا فاسو', emoji: '🇧🇫', label: 'بوركينا فاسو' },
          { value: '🇨🇮 ساحل العاج', emoji: '🇨🇮', label: 'ساحل العاج' },
          { value: '🇬🇭 غانا', emoji: '🇬🇭', label: 'غانا' },
          { value: '🇹🇬 توغو', emoji: '🇹🇬', label: 'توغو' },
          { value: '🇧🇯 بنين', emoji: '🇧🇯', label: 'بنين' },
          { value: '🇳🇬 نيجيريا', emoji: '🇳🇬', label: 'نيجيريا' },
          { value: '🇨🇲 الكاميرون', emoji: '🇨🇲', label: 'الكاميرون' },
          { value: '🇨🇫 جمهورية أفريقيا الوسطى', emoji: '🇨🇫', label: 'جمهورية أفريقيا الوسطى' },
          { value: '🇨🇬 الكونغو', emoji: '🇨🇬', label: 'الكونغو' },
          { value: '🇨🇩 تشاد', emoji: '🇨🇩', label: 'تشاد' },
          { value: '🇸🇸 جنوب السودان', emoji: '🇸🇸', label: 'جنوب السودان' },
          { value: '🇪🇹 إثيوبيا', emoji: '🇪🇹', label: 'إثيوبيا' },
          { value: '🇪🇷 إريتريا', emoji: '🇪🇷', label: 'إريتريا' }
        ];
        
        this.socialStatuses = [
          { value: 'أعزب', emoji: '💚', label: 'أعزب' },
          { value: 'متزوج', emoji: '💍', label: 'متزوج' },
          { value: 'مطلق', emoji: '💔', label: 'مطلق' },
          { value: 'أرمل', emoji: '🖤', label: 'أرمل' }
        ];
        
        // قائمة الأعمار
        this.ages = [];
        for (let i = 13; i <= 100; i++) {
          this.ages.push({ 
            value: `${i} سنة`, 
            emoji: i < 18 ? '👶' : i < 25 ? '👨‍🎓' : i < 35 ? '👨‍💼' : i < 50 ? '👨‍🦱' : '👴',
            label: `${i} سنة`
          });
        }
        
        // قائمة التأثيرات الحركية
        this.effects = [
          { 
            value: 'none', 
            name: 'بدون تأثيرات',
            emoji: '🚫',
            description: 'بدون أي تأثيرات حركية'
          },
          { 
            value: 'effect-pulse', 
            name: 'النبض الناعم',
            emoji: '💓',
            description: 'نبض خفيف ومريح'
          },
          { 
            value: 'effect-glow', 
            name: 'التوهج الذهبي',
            emoji: '✨',
            description: 'توهج ذهبي جميل'
          },
          { 
            value: 'effect-water', 
            name: 'التموج المائي',
            emoji: '🌊',
            description: 'حركة مائية سلسة'
          },
          { 
            value: 'effect-aurora', 
            name: 'الشفق القطبي',
            emoji: '🌌',
            description: 'تأثير الشفق الملون'
          },
          { 
            value: 'effect-neon', 
            name: 'النيون المتوهج',
            emoji: '💖',
            description: 'توهج نيون وردي'
          },
          { 
            value: 'effect-crystal', 
            name: 'البلور المتلألئ',
            emoji: '💎',
            description: 'لمعة بلورية جميلة'
          },
          { 
            value: 'effect-fire', 
            name: 'النار المتوهجة',
            emoji: '🔥',
            description: 'توهج ناري حارق'
          },
          { 
            value: 'effect-magnetic', 
            name: 'المغناطيس',
            emoji: '🧲',
            description: 'حركة عائمة مغناطيسية'
          },
          { 
            value: 'effect-heartbeat', 
            name: 'القلب النابض',
            emoji: '❤️',
            description: 'نبض مثل القلب'
          },
          { 
            value: 'effect-stars', 
            name: 'النجوم المتلألئة',
            emoji: '⭐',
            description: 'نجوم متحركة'
          },
          { 
            value: 'effect-rainbow', 
            name: 'قوس قزح',
            emoji: '🌈',
            description: 'تدرج قوس قزح متحرك'
          },
          { 
            value: 'effect-snow', 
            name: 'الثلج المتساقط',
            emoji: '❄️',
            description: 'ثلج متساقط جميل'
          },
          { 
            value: 'effect-lightning', 
            name: 'البرق',
            emoji: '⚡',
            description: 'وميض البرق'
          },
          { 
            value: 'effect-smoke', 
            name: 'الدخان',
            emoji: '💨',
            description: 'دخان متصاعد'
          },
          { 
            value: 'effect-butterfly', 
            name: 'الفراشة',
            emoji: '🦋',
            description: 'فراشة متحركة'
          }
        ];
        
        // قائمة الألوان العصرية المتدرجة
        this.themes = [
          { 
            value: 'theme-sunset-glow', 
            name: 'توهج الغروب',
            preview: 'linear-gradient(135deg, #ff6b6b, #ff8e53, #ffa726, #ffcc02, #ff6b6b)',
            emoji: '🌅'
          },
          { 
            value: 'theme-ocean-depths', 
            name: 'أعماق المحيط',
            preview: 'linear-gradient(135deg, #667eea, #764ba2, #f093fb, #667eea)',
            emoji: '🌊'
          },
          { 
            value: 'theme-aurora-borealis', 
            name: 'الشفق القطبي',
            preview: 'linear-gradient(135deg, #a8edea, #fed6e3, #ffecd2, #fcb69f, #a8edea)',
            emoji: '✨'
          },
          { 
            value: 'theme-cosmic-night', 
            name: 'الليل الكوني',
            preview: 'linear-gradient(135deg, #667eea, #764ba2, #f093fb, #667eea, #764ba2)',
            emoji: '🌌'
          },
          { 
            value: 'theme-emerald-forest', 
            name: 'الغابة الزمردية',
            preview: 'linear-gradient(135deg, #11998e, #38ef7d, #11998e, #38ef7d)',
            emoji: '🌿'
          },
          { 
            value: 'theme-rose-gold', 
            name: 'الوردي الذهبي',
            preview: 'linear-gradient(135deg, #ff9a9e, #fecfef, #fecfef, #ff9a9e)',
            emoji: '🌸'
          },
          { 
            value: 'theme-midnight-purple', 
            name: 'البنفسجي الليلي',
            preview: 'linear-gradient(135deg, #4facfe, #00f2fe, #4facfe, #00f2fe)',
            emoji: '🔮'
          },
          { 
            value: 'theme-golden-hour', 
            name: 'الساعة الذهبية',
            preview: 'linear-gradient(135deg, #fa709a, #fee140, #fa709a, #fee140)',
            emoji: '🌟'
          },
          { 
            value: 'theme-neon-dreams', 
            name: 'أحلام النيون',
            preview: 'linear-gradient(135deg, #ff0099, #493240, #ff0099, #493240)',
            emoji: '💫'
          },
          { 
            value: 'theme-silver-mist', 
            name: 'الضباب الفضي',
            preview: 'linear-gradient(135deg, #c3cfe2, #c3cfe2, #e0c3fc, #c3cfe2)',
            emoji: '☁️'
          },
          { 
            value: 'theme-fire-opal', 
            name: 'الأوبال الناري',
            preview: 'linear-gradient(135deg, #ff416c, #ff4b2b, #ff416c, #ff4b2b)',
            emoji: '🔥'
          },
          { 
            value: 'theme-crystal-clear', 
            name: 'البلور الصافي',
            preview: 'linear-gradient(135deg, #89f7fe, #66a6ff, #89f7fe, #66a6ff)',
            emoji: '💎'
          },
          { 
            value: 'theme-burgundy-velvet', 
            name: 'الخمري المخملي',
            preview: 'linear-gradient(135deg, #800020, #8b0000, #a52a2a, #800020)',
            emoji: '🍷'
          },
          { 
            value: 'theme-golden-velvet', 
            name: 'الذهبي المخملي',
            preview: 'linear-gradient(135deg, #ffd700, #daa520, #b8860b, #ffd700)',
            emoji: '👑'
          },
          { 
            value: 'theme-royal-black', 
            name: 'الأسود الملكي',
            preview: 'linear-gradient(135deg, #191970, #2f4f4f, #000000, #191970)',
            emoji: '⚜️'
          },
          { 
            value: 'theme-berry-velvet', 
            name: 'التوتي المخملي',
            preview: 'linear-gradient(135deg, #8a2be2, #4b0082, #800080, #8a2be2)',
            emoji: '🫐'
          },
          { 
            value: 'theme-crimson-velvet', 
            name: 'العنابي المخملي',
            preview: 'linear-gradient(135deg, #dc143c, #b22222, #8b0000, #dc143c)',
            emoji: '🔴'
          },
          { 
            value: 'theme-emerald-velvet', 
            name: 'الزمردي المخملي',
            preview: 'linear-gradient(135deg, #008000, #228b22, #006400, #008000)',
            emoji: '💚'
          },
          { 
            value: 'theme-sapphire-velvet', 
            name: 'الياقوتي المخملي',
            preview: 'linear-gradient(135deg, #0047ab, #191970, #00008b, #0047ab)',
            emoji: '💙'
          },
          { 
            value: 'theme-ruby-velvet', 
            name: 'الياقوت الأحمر',
            preview: 'linear-gradient(135deg, #9b111e, #8b0000, #800000, #9b111e)',
            emoji: '❤️'
          },
          { 
            value: 'theme-amethyst-velvet', 
            name: 'الأميثيست المخملي',
            preview: 'linear-gradient(135deg, #9966cc, #8a2be2, #4b0082, #9966cc)',
            emoji: '💜'
          },
          { 
            value: 'theme-onyx-velvet', 
            name: 'الأونيكس المخملي',
            preview: 'linear-gradient(135deg, #2f4f4f, #191919, #000000, #2f4f4f)',
            emoji: '🖤'
          },
          { 
            value: 'theme-sunset-fire', 
            name: 'توهج النار البرتقالي - محدث',
            preview: 'linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%)',
            emoji: '🔥'
          },
          { 
            value: 'theme-perfect-gradient', 
            name: 'التدرج المثالي - محدث',
            preview: 'linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%)',
            emoji: '🌟'
          },
          { 
            value: 'theme-image-gradient', 
            name: 'تدرج الصورة - محدث',
            preview: 'linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%)',
            emoji: '🖼️'
          },
          { 
            value: 'theme-new-gradient', 
            name: 'التدرج الجديد المطابق للصورة',
            preview: 'linear-gradient(to bottom, #ff7c00 0%, #e10026 30%, #800e8c 65%, #1a004d 100%)',
            emoji: '🎨'
          }
        ];
        
        this.init();
      }

      init() {
        this.loadSavedData();
        this.setupEventListeners();
        this.setupProfileMode();
      }

      setupEventListeners() {
        // تحسين معالجة الأحداث
        this.avatarInput.addEventListener('change', (e) => this.handleAvatarChange(e));
        this.coverInput.addEventListener('change', (e) => this.handleCoverChange(e));
        
        // إضافة معالجة الأخطاء
        window.addEventListener('error', (e) => this.handleError(e));
        
        // إغلاق النافذة المنبثقة عند النقر خارجها
        const editModal = document.getElementById('editModal');
        if (editModal) {
          editModal.addEventListener('click', (e) => {
            if (e.target.id === 'editModal') {
              this.closeEditModal();
            }
          });
        }
      }

      validateFile(file) {
        if (!file) return { valid: false, message: 'لم يتم اختيار ملف' };
        
        if (!this.allowedTypes.includes(file.type)) {
          return { valid: false, message: 'نوع الملف غير مدعوم. يرجى اختيار صورة JPG أو PNG أو WebP' };
        }
        
        if (file.size > this.maxFileSize) {
          return { valid: false, message: 'حجم الملف كبير جداً. الحد الأقصى 5 ميجابايت' };
        }
        
        return { valid: true };
      }

      async handleAvatarChange(event) {
        const file = event.target.files[0];
        const validation = this.validateFile(file);
        
        if (!validation.valid) {
          this.showMessage(validation.message, 'error');
          return;
        }

        try {
          this.setLoading(true);
          const result = await this.readFileAsDataURL(file);
          this.avatarImage.src = result;
          localStorage.setItem('user-avatar', result);
          this.showMessage('تم تغيير الصورة الشخصية بنجاح', 'success');
        } catch (error) {
          this.showMessage('حدث خطأ أثناء تحميل الصورة', 'error');
          console.error('Avatar change error:', error);
        } finally {
          this.setLoading(false);
        }
      }

      async handleCoverChange(event) {
        const file = event.target.files[0];
        const validation = this.validateFile(file);
        
        if (!validation.valid) {
          this.showMessage(validation.message, 'error');
          return;
        }

        try {
          this.setLoading(true);
          const result = await this.readFileAsDataURL(file);
          this.profileCover.style.backgroundImage = `url('${result}')`;
          localStorage.setItem('user-cover', result);
          this.showMessage('تم تغيير صورة الغلاف بنجاح', 'success');
        } catch (error) {
          this.showMessage('حدث خطأ أثناء تحميل صورة الغلاف', 'error');
          console.error('Cover change error:', error);
        } finally {
          this.setLoading(false);
        }
      }

      readFileAsDataURL(file) {
        return new Promise((resolve, reject) => {
          const reader = new FileReader();
          reader.onload = (e) => resolve(e.target.result);
          reader.onerror = reject;
          reader.readAsDataURL(file);
        });
      }

      loadSavedData() {
        try {
          const savedAvatar = localStorage.getItem('user-avatar');
          if (savedAvatar && this.avatarImage) {
            this.avatarImage.src = savedAvatar;
          }
          
          const savedCover = localStorage.getItem('user-cover');
          if (savedCover && this.profileCover) {
            this.profileCover.style.backgroundImage = `url('${savedCover}')`;
          }
          
          // تحميل البيانات المحفوظة
          const savedName = localStorage.getItem('user-name');
          const userNameElement = document.getElementById('userName');
          if (savedName && userNameElement) {
            userNameElement.textContent = savedName;
          }
          
          const savedStatus = localStorage.getItem('user-status');
          const userStatusElement = document.getElementById('userStatus');
          if (savedStatus && userStatusElement) {
            userStatusElement.textContent = savedStatus;
          }
          
          const savedCountry = localStorage.getItem('user-country');
          const userCountryElement = document.getElementById('userCountry');
          if (savedCountry && userCountryElement) {
            userCountryElement.textContent = savedCountry;
          }
          
          const savedAge = localStorage.getItem('user-age');
          const userAgeElement = document.getElementById('userAge');
          if (savedAge && userAgeElement) {
            userAgeElement.textContent = savedAge;
          }
          
          const savedSocialStatus = localStorage.getItem('user-social-status');
          const userSocialStatusElement = document.getElementById('userSocialStatus');
          if (savedSocialStatus && userSocialStatusElement) {
            userSocialStatusElement.textContent = savedSocialStatus;
          }
          
          const savedGender = localStorage.getItem('user-gender');
          const userGenderElement = document.getElementById('userGender');
          if (savedGender && userGenderElement) {
            userGenderElement.textContent = savedGender;
          }
          
          // تحميل اللون المحفوظ
          const savedTheme = localStorage.getItem('user-theme');
          if (savedTheme) {
            this.applyTheme(savedTheme);
            const userThemeElement = document.getElementById('userTheme');
            if (userThemeElement) {
              const theme = this.themes.find(t => t.value === savedTheme);
              userThemeElement.textContent = theme ? theme.name : 'التدرج الجديد المطابق للصورة';
            }
          } else {
            // تطبيق اللون الافتراضي
            this.applyTheme('theme-new-gradient');
          }
          
          // تحميل التأثيرات المحفوظة
          const savedEffects = localStorage.getItem('user-effects');
          if (savedEffects) {
            this.applyEffect(savedEffects);
            const userEffectsElement = document.getElementById('userEffects');
            if (userEffectsElement) {
              const effect = this.effects.find(e => e.value === savedEffects);
              userEffectsElement.textContent = effect ? effect.name : 'بدون تأثيرات';
            }
          }
        } catch (error) {
          console.error('Error loading saved data:', error);
        }
      }

      setLoading(loading) {
        const card = document.querySelector('.profile-card');
        if (loading) {
          card.classList.add('loading');
        } else {
          card.classList.remove('loading');
        }
      }

      showMessage(message, type) {
        // إزالة الرسائل السابقة
        const existingMessages = document.querySelectorAll('.error-message, .success-message');
        existingMessages.forEach(msg => msg.remove());

        // إنشاء رسالة جديدة
        const messageDiv = document.createElement('div');
        messageDiv.className = `${type}-message`;
        messageDiv.textContent = message;
        
        const profileBody = document.querySelector('.profile-body');
        profileBody.insertBefore(messageDiv, profileBody.firstChild);

        // إزالة الرسالة بعد 3 ثوان
        setTimeout(() => {
          messageDiv.remove();
        }, 3000);
      }

      handleError(error) {
        console.error('Application error:', error);
        this.showMessage('حدث خطأ غير متوقع', 'error');
      }
      
      // إعداد وضع الملف الشخصي (خاص أو لشخص آخر)
      setupProfileMode() {
        // يمكن تغيير هذا المتغير حسب الحاجة
        // this.isOwnProfile = false; // لجعلها ملف شخص آخر
        
        if (!this.isOwnProfile) {
          this.disableEditing();
        }
      }
      
      // تعطيل إمكانية التعديل
      disableEditing() {
        // إخفاء أزرار تغيير الصور
        const changeCoverBtn = document.querySelector('.change-cover-btn');
        const changeAvatarBtn = document.querySelector('.change-avatar-btn');
        
        if (changeCoverBtn) changeCoverBtn.style.display = 'none';
        if (changeAvatarBtn) changeAvatarBtn.style.display = 'none';
        
        // إزالة إمكانية النقر على جميع العناصر القابلة للتعديل
        const editableElements = document.querySelectorAll('#userName, #userStatus, .profile-details p');
        
        editableElements.forEach(element => {
          element.style.cursor = 'default';
          element.onclick = null;
          element.style.pointerEvents = 'none';
        });
        
        // إخفاء أزرار التفاعل غير المناسبة
        const reportBtn = document.querySelector('button[onclick="handleReport()"]');
        const blockBtn = document.querySelector('button[onclick="handleBlock()"]');
        
        if (reportBtn) reportBtn.style.display = 'none';
        if (blockBtn) blockBtn.style.display = 'none';
        
        // تغيير نص زر المحادثة
        const chatBtn = document.querySelector('button[onclick="handleChat()"]');
        if (chatBtn) {
          chatBtn.textContent = '💬 بدء محادثة';
        }
      }
      
      // تفعيل إمكانية التعديل
      enableEditing() {
        this.isOwnProfile = true;
        
        // إظهار أزرار تغيير الصور
        const changeCoverBtn = document.querySelector('.change-cover-btn');
        const changeAvatarBtn = document.querySelector('.change-avatar-btn');
        
        if (changeCoverBtn) changeCoverBtn.style.display = 'block';
        if (changeAvatarBtn) changeAvatarBtn.style.display = 'block';
        
        // إعادة تفعيل إمكانية النقر على جميع العناصر القابلة للتعديل
        const userName = document.getElementById('userName');
        const userStatus = document.getElementById('userStatus');
        
        if (userName) {
          userName.style.cursor = 'pointer';
          userName.onclick = () => this.openEditModal('name');
          userName.style.pointerEvents = 'auto';
        }
        
        if (userStatus) {
          userStatus.style.cursor = 'pointer';
          userStatus.onclick = () => this.openEditModal('status');
          userStatus.style.pointerEvents = 'auto';
        }
        
        // تفعيل النقر على عناصر التفاصيل
        const detailElements = document.querySelectorAll('.profile-details p');
        detailElements.forEach((element, index) => {
          element.style.cursor = 'pointer';
          element.style.pointerEvents = 'auto';
          
          // تحديد نوع التعديل حسب المحتوى
          const text = element.textContent;
          if (text.includes('الجنس')) {
            element.onclick = () => this.openEditModal('gender');
          } else if (text.includes('البلد')) {
            element.onclick = () => this.openEditModal('country');
          } else if (text.includes('العمر')) {
            element.onclick = () => this.openEditModal('age');
          } else if (text.includes('الحالة الاجتماعية')) {
            element.onclick = () => this.openEditModal('socialStatus');
          }
        });
        
        // تفعيل النقر على عناصر التفاصيل الإضافية
        const additionalDetailElements = document.querySelectorAll('.additional-details p');
        additionalDetailElements.forEach((element) => {
          element.style.cursor = 'pointer';
          element.style.pointerEvents = 'auto';
          
          const text = element.textContent;
          if (text.includes('لون الملف الشخصي')) {
            element.onclick = () => this.openEditModal('theme');
          } else if (text.includes('تأثيرات حركية')) {
            element.onclick = () => this.openEditModal('effects');
          }
        });
        
        // إظهار أزرار التفاعل
        const reportBtn = document.querySelector('button[onclick="handleReport()"]');
        const blockBtn = document.querySelector('button[onclick="handleBlock()"]');
        
        if (reportBtn) reportBtn.style.display = 'block';
        if (blockBtn) blockBtn.style.display = 'block';
        
        // تغيير نص زر المحادثة
        const chatBtn = document.querySelector('button[onclick="handleChat()"]');
        if (chatBtn) {
          chatBtn.textContent = '💬 محادثة';
        }
      }
      
      // دوال تعديل البيانات
      openEditModal(type) {
        this.currentEditType = type;
        const modal = document.getElementById('editModal');
        const title = document.getElementById('editTitle');
        const label = document.getElementById('editLabel');
        const input = document.getElementById('editInput');
        const select = document.getElementById('editSelect');
        
        if (!modal || !title || !label || !input || !select) {
          console.error('Modal elements not found');
          return;
        }
        
        // إخفاء جميع عناصر الإدخال
        input.style.display = 'none';
        select.style.display = 'none';

        // إزالة أي عناصر theme-options أو custom-gradient-modal عند فتح أي خيار غير theme
        const editField = document.querySelector('.edit-field');
        const existingThemeOptions = editField.querySelector('.theme-options');
        if (existingThemeOptions) existingThemeOptions.remove();
        const existingCustomGradient = editField.querySelector('.custom-gradient-modal');
        if (existingCustomGradient) existingCustomGradient.remove();

        if (type === 'name') {
          title.textContent = 'تعديل الاسم';
          label.textContent = 'الاسم الجديد:';
          input.placeholder = 'أدخل الاسم الجديد';
          input.style.display = 'block';
          const userNameElement = document.getElementById('userName');
          input.value = userNameElement ? userNameElement.textContent : '';
        } else if (type === 'status') {
          title.textContent = 'تعديل الحالة';
          label.textContent = 'الحالة الجديدة:';
          input.placeholder = 'أدخل الحالة الجديدة';
          input.style.display = 'block';
          const userStatusElement = document.getElementById('userStatus');
          input.value = userStatusElement ? userStatusElement.textContent : '';
        } else if (type === 'gender') {
          title.textContent = 'تعديل الجنس';
          label.textContent = 'اختر الجنس:';
          select.style.display = 'block';
          select.innerHTML = '<option value="">اختر الجنس...</option>';
          this.genders.forEach(gender => {
            const option = document.createElement('option');
            option.value = gender.value;
            option.textContent = `${gender.emoji} ${gender.label}`;
            select.appendChild(option);
          });
          const userGenderElement = document.getElementById('userGender');
          if (userGenderElement) {
            select.value = userGenderElement.textContent;
          }
        } else if (type === 'country') {
          title.textContent = 'تعديل البلد';
          label.textContent = 'اختر البلد:';
          select.style.display = 'block';
          select.innerHTML = '<option value="">اختر البلد...</option>';
          this.countries.forEach(country => {
            const option = document.createElement('option');
            option.value = country.value;
            option.textContent = `${country.emoji} ${country.label}`;
            select.appendChild(option);
          });
          const userCountryElement = document.getElementById('userCountry');
          if (userCountryElement) {
            select.value = userCountryElement.textContent;
          }
        } else if (type === 'age') {
          title.textContent = 'تعديل العمر';
          label.textContent = 'اختر العمر:';
          select.style.display = 'block';
          select.innerHTML = '<option value="">اختر العمر...</option>';
          this.ages.forEach(age => {
            const option = document.createElement('option');
            option.value = age.value;
            option.textContent = `${age.emoji} ${age.label}`;
            select.appendChild(option);
          });
          const userAgeElement = document.getElementById('userAge');
          if (userAgeElement) {
            select.value = userAgeElement.textContent;
          }
        } else if (type === 'socialStatus') {
          title.textContent = 'تعديل الحالة الاجتماعية';
          label.textContent = 'اختر الحالة:';
          select.style.display = 'block';
          select.innerHTML = '<option value="">اختر الحالة...</option>';
          this.socialStatuses.forEach(status => {
            const option = document.createElement('option');
            option.value = status.value;
            option.textContent = `${status.emoji} ${status.label}`;
            select.appendChild(option);
          });
          const userSocialStatusElement = document.getElementById('userSocialStatus');
          if (userSocialStatusElement) {
            select.value = userSocialStatusElement.textContent;
          }
        } else if (type === 'theme') {
          title.textContent = 'تعديل لون الملف الشخصي';
          label.textContent = 'اختر اللون:';
          // إخفاء عناصر الإدخال العادية
          input.style.display = 'none';
          select.style.display = 'none';
          // إنشاء قائمة خيارات الألوان
          const themeContainer = document.createElement('div');
          themeContainer.className = 'theme-options';
          themeContainer.style.cssText = `
            max-height: 300px;
            overflow-y: auto;
            margin-top: 10px;
          `;
          this.themes.forEach(theme => {
            const themeOption = document.createElement('div');
            themeOption.className = 'theme-option';
            themeOption.onclick = () => this.selectTheme(theme.value);
            const preview = document.createElement('div');
            preview.className = 'theme-preview';
            preview.style.background = theme.preview;
            const name = document.createElement('div');
            name.className = 'theme-name';
            name.textContent = `${theme.emoji} ${theme.name}`;
            themeOption.appendChild(preview);
            themeOption.appendChild(name);
            themeContainer.appendChild(themeOption);
          });

          // إزالة العناصر السابقة وإضافة الجديدة
          const existingContainer = editField.querySelector('.theme-options');
          if (existingContainer) {
            existingContainer.remove();
          }
          editField.appendChild(themeContainer);
          // تحديد اللون الحالي
          const currentTheme = localStorage.getItem('user-theme') || 'theme-new-gradient';
          this.highlightCurrentTheme(currentTheme);
        } else if (type === 'effects') {
          title.textContent = 'تعديل التأثيرات الحركية';
          label.textContent = 'اختر التأثير:';
          // إخفاء عناصر الإدخال العادية
          input.style.display = 'none';
          select.style.display = 'none';
          // إنشاء قائمة خيارات التأثيرات
          const effectsContainer = document.createElement('div');
          effectsContainer.className = 'theme-options';
          effectsContainer.style.cssText = `
            max-height: 400px;
            overflow-y: auto;
            margin-top: 10px;
          `;
          this.effects.forEach(effect => {
            const effectOption = document.createElement('div');
            effectOption.className = 'theme-option';
            effectOption.onclick = () => this.selectEffect(effect.value);
            const preview = document.createElement('div');
            preview.className = 'theme-preview';
            preview.style.background = 'linear-gradient(45deg, #ff7c00, #e10026, #800e8c, #1a004d)';
            preview.style.fontSize = '12px';
            preview.style.display = 'flex';
            preview.style.alignItems = 'center';
            preview.style.justifyContent = 'center';
            preview.textContent = effect.emoji;
            const name = document.createElement('div');
            name.className = 'theme-name';
            name.textContent = `${effect.emoji} ${effect.name}`;
            const description = document.createElement('div');
            description.style.cssText = `
              font-size: 11px;
              color: #ccc;
              margin-top: 2px;
            `;
            description.textContent = effect.description;
            effectOption.appendChild(preview);
            effectOption.appendChild(name);
            effectOption.appendChild(description);
            effectsContainer.appendChild(effectOption);
          });

          // إزالة العناصر السابقة وإضافة الجديدة
          const existingContainer = editField.querySelector('.theme-options');
          if (existingContainer) {
            existingContainer.remove();
          }
          editField.appendChild(effectsContainer);
          // تحديد التأثير الحالي
          const currentEffect = localStorage.getItem('user-effects') || 'none';
          this.highlightCurrentEffect(currentEffect);
        }
        modal.classList.add('show');
        if (input.style.display !== 'none') {
          input.focus();
        }
      }
      
      closeEditModal() {
        const modal = document.getElementById('editModal');
        if (modal) {
          modal.classList.remove('show');
          
          // إزالة عناصر الألوان المضافة
          const themeOptions = modal.querySelector('.theme-options');
          if (themeOptions) {
            themeOptions.remove();
          }
          
          // إعادة إظهار عناصر الإدخال العادية
          const input = document.getElementById('editInput');
          const select = document.getElementById('editSelect');
          if (input) input.style.display = 'block';
          if (select) select.style.display = 'none';
        }
        this.currentEditType = null;
      }
      
      saveEdit() {
        const input = document.getElementById('editInput');
        const select = document.getElementById('editSelect');
        
        let newValue = '';
        
        if (input.style.display !== 'none' && input) {
          newValue = input.value.trim();
        } else if (select.style.display !== 'none' && select) {
          newValue = select.value;
        }
        
        if (!newValue) {
          this.showMessage('يرجى إدخال قيمة صحيحة', 'error');
          return;
        }
        
        if (this.currentEditType === 'name') {
          const userNameElement = document.getElementById('userName');
          if (userNameElement) {
            userNameElement.textContent = newValue;
            localStorage.setItem('user-name', newValue);
            this.showMessage('تم تغيير الاسم بنجاح', 'success');
          }
        } else if (this.currentEditType === 'status') {
          const userStatusElement = document.getElementById('userStatus');
          if (userStatusElement) {
            userStatusElement.textContent = newValue;
            localStorage.setItem('user-status', newValue);
            this.showMessage('تم تغيير الحالة بنجاح', 'success');
          }
                 } else if (this.currentEditType === 'gender') {
           const userGenderElement = document.getElementById('userGender');
           if (userGenderElement) {
             userGenderElement.textContent = newValue;
             localStorage.setItem('user-gender', newValue);
             this.showMessage('تم تغيير الجنس بنجاح', 'success');
           }
         } else if (this.currentEditType === 'country') {
           const userCountryElement = document.getElementById('userCountry');
           if (userCountryElement) {
             userCountryElement.textContent = newValue;
             localStorage.setItem('user-country', newValue);
             this.showMessage('تم تغيير البلد بنجاح', 'success');
           }
         } else if (this.currentEditType === 'age') {
           const userAgeElement = document.getElementById('userAge');
           if (userAgeElement) {
             userAgeElement.textContent = newValue;
             localStorage.setItem('user-age', newValue);
             this.showMessage('تم تغيير العمر بنجاح', 'success');
           }
                 } else if (this.currentEditType === 'socialStatus') {
          const userSocialStatusElement = document.getElementById('userSocialStatus');
          if (userSocialStatusElement) {
            userSocialStatusElement.textContent = newValue;
            localStorage.setItem('user-social-status', newValue);
            this.showMessage('تم تغيير الحالة الاجتماعية بنجاح', 'success');
          }
        } else if (this.currentEditType === 'theme') {
          this.applyTheme(newValue);
          const userThemeElement = document.getElementById('userTheme');
          if (userThemeElement) {
            const theme = this.themes.find(t => t.value === newValue);
            userThemeElement.textContent = theme ? theme.name : 'التدرج الجديد المطابق للصورة';
            localStorage.setItem('user-theme', newValue);
            this.showMessage('تم تغيير لون الملف الشخصي بنجاح', 'success');
          }
        } else if (this.currentEditType === 'effects') {
          this.applyEffect(newValue);
          const userEffectsElement = document.getElementById('userEffects');
          if (userEffectsElement) {
            const effect = this.effects.find(e => e.value === newValue);
            userEffectsElement.textContent = effect ? effect.name : 'بدون تأثيرات';
            localStorage.setItem('user-effects', newValue);
            this.showMessage('تم تغيير التأثيرات الحركية بنجاح', 'success');
          }
        }
        
        this.closeEditModal();
      }
      
      // تطبيق اللون المختار
      applyTheme(themeValue) {
        const profileCard = document.querySelector('.profile-card');
        if (!profileCard) return;
        
        // إزالة جميع الألوان السابقة
        this.themes.forEach(theme => {
          profileCard.classList.remove(theme.value);
        });
        
        // إضافة اللون الجديد
        profileCard.classList.add(themeValue);
      }
      
      // تحديد اللون المختار
      selectTheme(themeValue) {
        // إزالة التحديد من جميع الخيارات
        const themeOptions = document.querySelectorAll('.theme-option');
        themeOptions.forEach(option => {
          option.classList.remove('selected');
        });
        
        // تحديد الخيار المختار
        const selectedOption = document.querySelector(`[onclick="this.selectTheme('${themeValue}')"]`);
        if (selectedOption) {
          selectedOption.classList.add('selected');
        }
        
        // تطبيق اللون مع تأثير بصري
        this.applyTheme(themeValue);
        
        // إظهار رسالة نجاح فورية
        const theme = this.themes.find(t => t.value === themeValue);
        if (theme) {
          this.showMessage(`تم تطبيق ${theme.name} بنجاح!`, 'success');
        }
        
        // حفظ القيمة
        this.currentEditType = 'theme';
        this.saveEdit();
        
        // إغلاق النافذة بعد ثانيتين
        setTimeout(() => {
          this.closeEditModal();
        }, 2000);
      }
      
      // تحديد اللون الحالي في القائمة
      highlightCurrentTheme(currentTheme) {
        setTimeout(() => {
          const themeOptions = document.querySelectorAll('.theme-option');
          themeOptions.forEach(option => {
            option.classList.remove('selected');
            if (option.onclick && option.onclick.toString().includes(currentTheme)) {
              option.classList.add('selected');
            }
          });
        }, 100);
      }
      
      // تطبيق التأثير المختار
      applyEffect(effectValue) {
        const profileCard = document.querySelector('.profile-card');
        if (!profileCard) return;
        
        // إزالة جميع التأثيرات السابقة
        this.effects.forEach(effect => {
          profileCard.classList.remove(effect.value);
        });
        
        // إضافة التأثير الجديد (إذا لم يكن 'none')
        if (effectValue !== 'none') {
          profileCard.classList.add(effectValue);
        }
      }
      
      // تحديد التأثير المختار
      selectEffect(effectValue) {
        // إزالة التحديد من جميع الخيارات
        const effectOptions = document.querySelectorAll('.theme-option');
        effectOptions.forEach(option => {
          option.classList.remove('selected');
        });
        
        // تحديد الخيار المختار
        const selectedOption = document.querySelector(`[onclick="this.selectEffect('${effectValue}')"]`);
        if (selectedOption) {
          selectedOption.classList.add('selected');
        }
        
        // تطبيق التأثير مع تأثير بصري
        this.applyEffect(effectValue);
        
        // إظهار رسالة نجاح فورية
        const effect = this.effects.find(e => e.value === effectValue);
        if (effect) {
          this.showMessage(`تم تطبيق ${effect.name} بنجاح!`, 'success');
        }
        
        // حفظ القيمة
        this.currentEditType = 'effects';
        this.saveEdit();
        
        // إغلاق النافذة بعد ثانيتين
        setTimeout(() => {
          this.closeEditModal();
        }, 2000);
      }
      
      // تحديد التأثير الحالي في القائمة
      highlightCurrentEffect(currentEffect) {
        setTimeout(() => {
          const effectOptions = document.querySelectorAll('.theme-option');
          effectOptions.forEach(option => {
            option.classList.remove('selected');
            if (option.onclick && option.onclick.toString().includes(currentEffect)) {
              option.classList.add('selected');
            }
          });
        }, 100);
      }




    }

    // دوال التفاعل
    function openEditModal(type) {
      if (profileManager && profileManager.isOwnProfile) {
        profileManager.openEditModal(type);
      }
    }
    
    function closeEditModal() {
      if (profileManager) {
        profileManager.closeEditModal();
      }
    }
    
    function saveEdit() {
      if (profileManager && profileManager.isOwnProfile) {
        profileManager.saveEdit();
      }
    }
    
    // دوال للتبديل بين أوضاع الملف الشخصي
    function showOwnProfile() {
      if (profileManager) {
        profileManager.enableEditing();
      }
    }
    
    function showOtherProfile() {
      if (profileManager) {
        profileManager.isOwnProfile = false;
        profileManager.disableEditing();
      }
    }

    function handleReport() {
      try {
        if (profileManager && !profileManager.isOwnProfile) {
          alert('سيتم إرسال البلاغ للإدارة');
        }
      } catch (error) {
        console.error('Error in handleReport:', error);
      }
    }

    function handleBlock() {
      try {
        if (profileManager && !profileManager.isOwnProfile) {
          if (confirm('هل أنت متأكد من حظر هذا المستخدم؟')) {
            alert('تم حظر المستخدم');
          }
        }
      } catch (error) {
        console.error('Error in handleBlock:', error);
      }
    }

    function handleChat() {
      try {
        if (profileManager && !profileManager.isOwnProfile) {
          alert('سيتم فتح نافذة المحادثة');
        }
      } catch (error) {
        console.error('Error in handleChat:', error);
      }
    }

    // تهيئة التطبيق
    let profileManager;
    document.addEventListener('DOMContentLoaded', function() {
      try {
        profileManager = new ProfileManager();
      } catch (error) {
        console.error('Error initializing ProfileManager:', error);
      }
    });
  </script>

</body>
</html> 