ALTER TABLE users ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE users ADD COLUMN IF NOT EXISTS role TEXT DEFAULT 'guest';
UPDATE users SET role = COALESCE(user_type, 'guest') WHERE role IS NULL OR role = '';

CREATE TABLE IF NOT EXISTS blocked_devices (
    id SERIAL PRIMARY KEY,
    ip_address TEXT NOT NULL,
    device_id TEXT NOT NULL,
    user_id INTEGER NOT NULL REFERENCES users(id),
    reason TEXT NOT NULL,
    blocked_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    blocked_by INTEGER NOT NULL REFERENCES users(id),
    UNIQUE(ip_address, device_id)
);

CREATE INDEX IF NOT EXISTS idx_users_username ON users(username);
CREATE INDEX IF NOT EXISTS idx_users_user_type ON users(user_type);
CREATE INDEX IF NOT EXISTS idx_users_role ON users(role);

ALTER TABLE friends ADD CONSTRAINT IF NOT EXISTS unique_friendship UNIQUE(user_id, friend_id);

INSERT INTO users (username, password, user_type, role, profile_image, join_date, created_at)
SELECT 'admin', 'admin123', 'owner', 'owner', '/default_avatar.svg', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM users WHERE username = 'admin');

INSERT INTO users (username, password, user_type, role, profile_image, join_date, created_at)
SELECT 'testuser', 'test123', 'member', 'member', '/default_avatar.svg', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP
WHERE NOT EXISTS (SELECT 1 FROM users WHERE username = 'testuser');

UPDATE users SET username = 'user_' || id::text WHERE username IS NULL OR TRIM(username) = '';
UPDATE users SET user_type = 'guest' WHERE user_type NOT IN ('guest', 'member', 'admin', 'owner');
UPDATE users SET role = user_type WHERE role IS NULL OR role = '';

ANALYZE users;
ANALYZE messages;
ANALYZE friends;
ANALYZE notifications;