const { databaseService } = require('./server/services/databaseService');

async function findBlockedUsers() {
  try {
    console.log('๐ ุงูุจุญุซ ุนู ุงููุณุชุฎุฏููู ุงููุญุธูุฑูู...\n');
    
    // ุฌูุจ ุฌููุน ุงููุณุชุฎุฏููู
    const allUsers = await databaseService.getAllUsers();
    
    // ููุชุฑุฉ ุงููุณุชุฎุฏููู ุงููุญุธูุฑูู
    const blockedUsers = allUsers.filter(user => user.isBlocked === true);
    
    if (blockedUsers.length === 0) {
      console.log('โ ูุง ููุฌุฏ ูุณุชุฎุฏููู ูุญุธูุฑูู ุญุงููุงู');
      return;
    }
    
    console.log(`๐ ุชู ุงูุนุซูุฑ ุนูู ${blockedUsers.length} ูุณุชุฎุฏู ูุญุธูุฑ:\n`);
    
    blockedUsers.forEach((user, index) => {
      console.log(`${index + 1}. ุงููุณุชุฎุฏู: ${user.username}`);
      console.log(`   ID: ${user.id}`);
      console.log(`   ุงูููุน: ${user.userType}`);
      console.log(`   ุนููุงู IP: ${user.ipAddress || 'ุบูุฑ ูุชููุฑ'}`);
      console.log(`   ูุนุฑู ุงูุฌูุงุฒ: ${user.deviceId || 'ุบูุฑ ูุชููุฑ'}`);
      console.log(`   ุชุงุฑูุฎ ุงูุงูุถูุงู: ${user.joinDate || 'ุบูุฑ ูุชููุฑ'}`);
      console.log('   ' + 'โ'.repeat(50));
    });
    
    console.log(`\n๐ ุฃุณูุงุก ุงููุณุชุฎุฏููู ุงููุญุธูุฑูู:`);
    blockedUsers.forEach((user, index) => {
      console.log(`${index + 1}. ${user.username} (ID: ${user.id})`);
    });
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุจุญุซ ุนู ุงููุณุชุฎุฏููู ุงููุญุธูุฑูู:', error);
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
findBlockedUsers().then(() => {
  console.log('\nโ ุงูุชูู ุงูุจุญุซ');
  process.exit(0);
}).catch(error => {
  console.error('โ ุฎุทุฃ ูู ุชุดุบูู ุงูุณูุฑูุจุช:', error);
  process.exit(1);
});