/**
 * โจ ูุธุงู ุงุญุชุฑุงูู ููุญุฏ ูุฃุญุฌุงู ุงูุฅุทุงุฑุงุช - ูุซู ุงูููุงูุน ุงูุนุงูููุฉ
 * Professional unified frame sizing system - Like global websites
 * 
 * ๐ฏ ุงูููููู ุงูุฌุฏูุฏ: ุงูุฅุทุงุฑ ูุงูุตูุฑุฉ ุจููุณ ุงูุญุฌู ุชูุงูุงู
 * New Concept: Frame and image are exactly the same size
 * 
 * โ ุงููุฒุงูุง:
 * - ูุญุงุฐุงุฉ ูุซุงููุฉ 100%
 * - ุจุณุงุทุฉ ูู ุงูุญุณุงุจ
 * - ูุง ุชูุฌุฏ ูุณุงูุงุช ุบูุฑ ูุชููุนุฉ
 * - ูุนูู ูุซู Facebook, Instagram, Discord
 */

export const FRAME_SIZING = {
  /**
   * ๐ซ ูู ูุนุฏ ูุญุชุงุฌ FRAME_WIDTH - ุงูุฅุทุงุฑ ูุบุทู ุงูุตูุฑุฉ ูุจุงุดุฑุฉ
   * No more FRAME_WIDTH needed - Frame overlays image directly
   */

  /**
   * ุงูุฃุญุฌุงู ุงูููุงุณูุฉ ุงูููุญุฏุฉ - ููุตูุฑุฉ ูุงูุฅุทุงุฑ ูุนุงู
   * Standard unified sizes - For both image and frame
   */
  SIZES: {
    /** ููุงุณุชุฎุฏุงู ูู ุงูุฑุณุงุฆู ูุงูุฃูุงูู ุงูุตุบูุฑุฉ ุฌุฏุงู (32px) */
    micro: 32,
    
    /** ููุงุณุชุฎุฏุงู ูู ุงูููุงุฆู ุงูุฌุงูุจูุฉ (40px) */
    small: 40,
    
    /** ุงูุญุฌู ุงูุงูุชุฑุงุถู ููุฏุฑุฏุดุฉ (56px) */
    medium: 56,
    
    /** ูููููุงุช ุงูุดุฎุตูุฉ ุงููุตุบุฑุฉ (80px) */
    large: 80,
    
    /** ูููููุงุช ุงูุดุฎุตูุฉ ุงููุงููุฉ (120px) */
    xlarge: 120,
  },
} as const;

/**
 * โจ ุงูุญู ุงูุฌุฏูุฏ: ุงูุฅุทุงุฑ = ุงูุตูุฑุฉ (ููุณ ุงูุญุฌู ุชูุงูุงู)
 * New Solution: Frame = Image (exactly same size)
 * 
 * ูุฐุง ูู ูุง ุชูุนูู ุงูููุงูุน ุงูุงุญุชุฑุงููุฉ:
 * - Discord: ุงูุฅุทุงุฑ ูุบุทู ุงูุตูุฑุฉ ุจููุณ ุงูุญุฌู
 * - Facebook: ุงูุฅุทุงุฑ overlay ูุจุงุดุฑ
 * - Instagram: ููุณ ุงูุญุฌู ูุน padding ุฏุงุฎูู
 */
export function getFrameSize(imageSize: number): number {
  // ๐ฏ ุงูุจุณุงุทุฉ = ุงูููุงู
  return imageSize;
}

/**
 * ุงูุญุตูู ุนูู ุงูุญุฌู ุงูููุงุณู ุงูููุงุณุจ
 * Get appropriate standard size
 */
export function getStandardSize(requestedSize: number): number {
  const sizes = Object.values(FRAME_SIZING.SIZES);
  
  // ุฅูุฌุงุฏ ุฃูุฑุจ ุญุฌู ููุงุณู
  let closest = sizes[0];
  let minDiff = Math.abs(requestedSize - closest);
  
  for (const size of sizes) {
    const diff = Math.abs(requestedSize - size);
    if (diff < minDiff) {
      minDiff = diff;
      closest = size;
    }
  }
  
  return closest;
}
