import { useEffect, useRef } from 'react';

import { useToast } from '@/hooks/use-toast';
import type { ChatUser } from '@/types/chat';

interface WelcomeNotificationProps {
  user: ChatUser;
}

export default function WelcomeNotification({ user }: WelcomeNotificationProps) {
  const { toast } = useToast();
  const hasShownWelcome = useRef(false);

  useEffect(() => {
    // ุชุฌูุจ ุนุฑุถ ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุฃูุซุฑ ูู ูุฑุฉ ูู ููุณ ุงูุฌูุณุฉ
    if (hasShownWelcome.current) return;
    
    // ุฅุดุนุงุฑ ุชุฑุญูุจ ุจุงููุณุชุฎุฏู ุงูุฌุฏูุฏ (ููุท ุนูุฏ ุงูุฏุฎูู ุงูุฃูู)
    if (user.userType === 'guest') {
      toast({
        title: '๐ ุฃููุงู ูุณููุงู',
        description: `ูุฑุญุจุงู ุจู ${user.username} ูุถูู ูู ููุตุฉ ุงูุฏุฑุฏุดุฉ ุงูุนุฑุจูุฉ!`,
        duration: 5000,
      });
      hasShownWelcome.current = true;
    } else if (user.userType === 'member') {
      toast({
        title: '๐ ูุฑุญุจุงู ุจุนูุฏุชู',
        description: `ุฃููุงู ุจู ${user.username}! ุงุทูุน ุนูู ุงูุฑุณุงุฆู ุงูุฌุฏูุฏุฉ ูุงูุฃุตุฏูุงุก ุงููุชุตููู`,
        duration: 5000,
      });
      hasShownWelcome.current = true;
    }

    // ุทูุจ ุฅุฐู ููุฅุดุนุงุฑุงุช (ููุท ูุฑุฉ ูุงุญุฏุฉ)
    if ('Notification' in window && Notification.permission === 'default') {
      Notification.requestPermission().then((permission) => {
        if (permission === 'granted') {
          new Notification('ูุฑุญุจุงู ุจู ูู ุงูุฏุฑุฏุดุฉ ุงูุนุฑุจูุฉ! ๐ฌ', {
            body: 'ุณุชุญุตู ุนูู ุฅุดุนุงุฑุงุช ููุฑุณุงุฆู ุงูุฌุฏูุฏุฉ ูุทูุจุงุช ุงูุตุฏุงูุฉ',
            icon: '/favicon.ico',
          });
        }
      });
    }
  }, [user.id, toast]); // ุชุบููุฑ dependency ุฅูู user.id ุจุฏูุงู ูู user ูุงููุงู

  return null;
}
